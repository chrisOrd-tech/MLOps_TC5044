base:
  random_seed: 42

data:
  # loading data
  filepath: 'data/raw/ckd-dataset-v2.csv'
  header: 0
  skiprows: [1,2]
  target_column: 'class'
  target_dict: {'ckd':1, 'notckd':0}
  clean_file: 'data/processed/ckd_dataset_clean.csv'

preprocess:
  test_size: 0.2
  train_X_path: 'data/processed/train_X_ckd_dataset_v2.csv'
  train_y_path: 'data/processed/train_y_ckd_dataset_v2.csv'
  test_X_path: 'data/processed/test_X_ckd_dataset_v2.csv'
  test_y_path: 'data/processed/test_y_ckd_dataset_v2.csv'

train:
  # training hyperparameters
  estimator_name: svc_model
  estimators:
    # Model 1
    log_reg: # sklearn.linear_model.LogisticRegression
      params: {'C': 0.01, 'max_iter': 10, 'solver': 'lbfgs'}
      model_path: 'models/model_log_reg.pkl'
    # Model 2
    svc_model: # sklearn.svm.SVC
      params: {'C': 0.9643857615941438, 'degree': 5, 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.01}
      model_path: 'models/model_svc_model.pkl'
    # Model 3
    knn_model: # sklearn.neighbors.KNeighborsClassifier
      params: {'n_neighbors': 7, 'algorithm': auto, 'leaf_size': 30, 'p': 2, 'weights': uniform}
      model_path: 'models/model_knn_model.pkl'

evaluate:
  # metrics, images, etc.
  reports_dir: 'reports'
  target_names: ['not_ckd', 'ckd']
  estimators:
    log_reg:
      confusion_matrix_img: 'confusion_matrix_log_reg.png'
    svc_model:
      confusion_matrix_img: 'confusion_matrix_svc_model.png'
    knn_model:
      confusion_matrix_img: 'confusion_matrix_knn_mod.png'